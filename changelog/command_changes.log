src/content/docs/aws/integrations/aws-sdks/ruby.md:77: {{< command >}}
$ ruby ./localstack.rb
Created bucket doc-example-bucket-b911f85f-4dd3-4668-a32e-3f69aa4e37dc.
Your bucket's region is: us-east-2
{{< /command >}} -> ```bash
ruby ./localstack.rb
Created bucket doc-example-bucket-b911f85f-4dd3-4668-a32e-3f69aa4e37dc.
Your bucket's region is: us-east-2
```
src/content/docs/aws/integrations/testing/lambdatest-hyperexecute.md:89: {{< command >}}
$ hyperexecute --user '<user-name>' --key '<HE-key>' --config he.yaml
{{< /command >}} -> ```bash
hyperexecute --user '<user-name>' --key '<HE-key>' --config he.yaml
```
src/content/docs/aws/integrations/app-frameworks/serverless-framework.md:70: {{< command >}}
$ npm install -D serverless-localstack
{{< / command >}} -> ```bash
npm install -D serverless-localstack
```
src/content/docs/aws/integrations/app-frameworks/serverless-framework.md:134: {{< command >}}
$ localstack start
{{< / command >}} -> ```bash
localstack start
```
src/content/docs/aws/integrations/app-frameworks/serverless-framework.md:139: {{< command >}}
$ serverless deploy --stage local
{{< / command >}} -> ```bash
serverless deploy --stage local
```
src/content/docs/aws/integrations/app-frameworks/spring-cloud-function.md:66: {{< command >}}
$ gradle init
{{< / command >}} -> ```bash
gradle init
```
src/content/docs/aws/integrations/app-frameworks/spring-cloud-function.md:72: {{< command >}}
$ gradle wrapper
{{< / command >}} -> ```bash
gradle wrapper
```
src/content/docs/aws/integrations/app-frameworks/spring-cloud-function.md:79: {{< command >}}
$ ./gradlew <command>
{{< / command >}} -> ```bash
./gradlew <command>
```
src/content/docs/aws/integrations/app-frameworks/architect.md:20: {{< command >}}
$ npm install -g architect-local @architect/architect aws-sdk
{{< /command >}} -> ```bash
npm install -g architect-local @architect/architect aws-sdk
```
src/content/docs/aws/integrations/app-frameworks/architect.md:28: {{< command >}}
$ mkdir architect_quickstart && cd architect_quickstart
{{< / command >}} -> ```bash
mkdir architect_quickstart && cd architect_quickstart
```
src/content/docs/aws/integrations/app-frameworks/architect.md:34: {{< command >}}
$ arclocal init
{{< / command >}} -> ```bash
arclocal init
```
src/content/docs/aws/integrations/app-frameworks/architect.md:42: {{< command >}}
$ arclocal deploy
{{< / command >}} -> ```bash
arclocal deploy
```
src/content/docs/aws/integrations/messaging/selfmanaged-kafka-cluster.md:19: {{< command >}}
$ docker-compose up -d
{{< / command >}} -> ```bash
docker-compose up -d
```
src/content/docs/aws/integrations/messaging/selfmanaged-kafka-cluster.md:25: {{< command >}}
$ awslocal lambda create-function \
    --function-name fun1 \
    --handler lambda.handler \
    --runtime python3.8 \
    --role arn:aws:iam::000000000000:role/lambda-role \
    --zip-file fileb://lambda.zip
{
    "FunctionName": "fun1",
    "FunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:fun1",
    "Runtime": "python3.8",
    "Role": "arn:aws:iam::000000000000:role/lambda-role",
    "Handler": "lambda.handler",
    "CodeSize": 294,
    "Description": "",
    "Timeout": 3,
    "LastModified": "2021-05-19T02:01:06.617+0000",
    "CodeSha256": "/GPsiNXaq4tBA4QpxPCwgpeVfP7j+1tTH6zdkJ3jiU4=",
    "Version": "$LATEST",
    "VpcConfig": {},
    "TracingConfig": {
        "Mode": "PassThrough"
    },
    "RevisionId": "d85469d2-8558-4d75-bc0e-5926f373e12c",
    "State": "Active",
    "LastUpdateStatus": "Successful",
    "PackageType": "Zip"
}
{{< / command >}} -> ```bash
awslocal lambda create-function \
    --function-name fun1 \
    --handler lambda.handler \
    --runtime python3.8 \
    --role arn:aws:iam::000000000000:role/lambda-role \
    --zip-file fileb://lambda.zip
{
    "FunctionName": "fun1",
    "FunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:fun1",
    "Runtime": "python3.8",
    "Role": "arn:aws:iam::000000000000:role/lambda-role",
    "Handler": "lambda.handler",
    "CodeSize": 294,
    "Description": "",
    "Timeout": 3,
    "LastModified": "2021-05-19T02:01:06.617+0000",
    "CodeSha256": "/GPsiNXaq4tBA4QpxPCwgpeVfP7j+1tTH6zdkJ3jiU4=",
    "Version": "$LATEST",
    "VpcConfig": {},
    "TracingConfig": {
        "Mode": "PassThrough"
    },
    "RevisionId": "d85469d2-8558-4d75-bc0e-5926f373e12c",
    "State": "Active",
    "LastUpdateStatus": "Successful",
    "PackageType": "Zip"
}
```
src/content/docs/aws/integrations/messaging/selfmanaged-kafka-cluster.md:57: {{< command >}}
$ awslocal secretsmanager create-secret --name localstack
{
    "ARN": "arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI",
    "Name": "localstack",
    "VersionId": "32bbb8e2-46ee-4322-b3d5-b6459d54513b"
}
{{< / command >}} -> ```bash
awslocal secretsmanager create-secret --name localstack
{
    "ARN": "arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI",
    "Name": "localstack",
    "VersionId": "32bbb8e2-46ee-4322-b3d5-b6459d54513b"
}
```
src/content/docs/aws/integrations/messaging/selfmanaged-kafka-cluster.md:68: {{< command >}}
$ docker exec -ti kafka kafka-topics --zookeeper zookeeper:2181 --create --replication-factor 1 --partitions 1 --topic t1
Created topic t1.
{{< / command >}} -> ```bash
docker exec -ti kafka kafka-topics --zookeeper zookeeper:2181 --create --replication-factor 1 --partitions 1 --topic t1
Created topic t1.
```
src/content/docs/aws/integrations/messaging/selfmanaged-kafka-cluster.md:75: {{< command >}}
$ awslocal lambda create-event-source-mapping \
    --topics t1 \
    --source-access-configuration Type=SASL_SCRAM_512_AUTH,URI=arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI \
    --function-name arn:aws:lambda:us-east-1:000000000000:function:fun1 \
    --self-managed-event-source '{"Endpoints":{"KAFKA_BOOTSTRAP_SERVERS":["localhost:9092"]}}'
{
    "UUID": "4a2b0ea6-960c-4847-8684-465876dd6dbd",
    "BatchSize": 100,
    "FunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:fun1",
    "LastModified": "2021-05-19T04:02:49+02:00",
    "LastProcessingResult": "OK",
    "State": "Enabled",
    "StateTransitionReason": "User action",
    "Topics": [
        "t1"
    ],
    "SourceAccessConfigurations": [
        {
            "Type": "SASL_SCRAM_512_AUTH",
            "URI": "arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI"
        }
    ],
    "SelfManagedEventSource": {
        "Endpoints": {
            "KAFKA_BOOTSTRAP_SERVERS": [
                "localhost:9092"
            ]
        }
    }
}
{{< / command >}} -> ```bash
awslocal lambda create-event-source-mapping \
    --topics t1 \
    --source-access-configuration Type=SASL_SCRAM_512_AUTH,URI=arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI \
    --function-name arn:aws:lambda:us-east-1:000000000000:function:fun1 \
    --self-managed-event-source '{"Endpoints":{"KAFKA_BOOTSTRAP_SERVERS":["localhost:9092"]}}'
{
    "UUID": "4a2b0ea6-960c-4847-8684-465876dd6dbd",
    "BatchSize": 100,
    "FunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:fun1",
    "LastModified": "2021-05-19T04:02:49+02:00",
    "LastProcessingResult": "OK",
    "State": "Enabled",
    "StateTransitionReason": "User action",
    "Topics": [
        "t1"
    ],
    "SourceAccessConfigurations": [
        {
            "Type": "SASL_SCRAM_512_AUTH",
            "URI": "arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-TDIuI"
        }
    ],
    "SelfManagedEventSource": {
        "Endpoints": {
            "KAFKA_BOOTSTRAP_SERVERS": [
                "localhost:9092"
            ]
        }
    }
}
```
src/content/docs/aws/integrations/aws-native-tools/aws-cdk.md:40: {{< command >}}
$ cdklocal --help
{{< /command >}} -> ```bash
cdklocal --help
```
src/content/docs/aws/integrations/aws-native-tools/aws-cdk.md:55: {{< command >}}
$ curl http://localhost:4566/_localstack/health
{{< /command >}} -> ```bash
curl http://localhost:4566/_localstack/health
```
src/content/docs/aws/integrations/aws-native-tools/aws-cdk.md:76: {{< command >}}
$ awslocal sns list-topics
 {
     "Topics": [
         {
             "TopicArn": "arn:aws:sns:us-east-1:000000000000:TestStack-TestTopic339EC197-79F43WWCCS4Z"
         }
     ]
}
{{< /command >}} -> ```bash
awslocal sns list-topics
 {
     "Topics": [
         {
             "TopicArn": "arn:aws:sns:us-east-1:000000000000:TestStack-TestTopic339EC197-79F43WWCCS4Z"
         }
     ]
}
```
src/content/docs/aws/integrations/aws-native-tools/aws-sam.md:28: {{< command >}}
$ pip install aws-sam-cli-local
{{< / command >}} -> ```bash
pip install aws-sam-cli-local
```
src/content/docs/aws/integrations/aws-native-tools/aws-sam.md:36: {{< command >}}
$ samlocal init
{{< / command >}} -> ```bash
samlocal init
```
src/content/docs/aws/integrations/aws-native-tools/aws-sam.md:52: {{< command >}}
$ samlocal deploy --guided
{{< / command >}} -> ```bash
samlocal deploy --guided
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:23: {{< command >}}
$ pip install awscli
{{< / command >}} -> ```bash
pip install awscli
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:37: {{< command >}}
$ export AWS_ACCESS_KEY_ID="test"
$ export AWS_SECRET_ACCESS_KEY="test"
$ export AWS_DEFAULT_REGION="us-east-1"

$ aws --endpoint-url=http://localhost:4566 kinesis list-streams
{{< / command >}} -> ```bash
export AWS_ACCESS_KEY_ID="test"
export AWS_SECRET_ACCESS_KEY="test"
export AWS_DEFAULT_REGION="us-east-1"

aws --endpoint-url=http://localhost:4566 kinesis list-streams
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:71: {{< command >}}
$ aws s3 mb s3://test --profile localstack
$ aws s3 ls --profile localstack
{{< / command >}} -> ```bash
aws s3 mb s3://test --profile localstack
aws s3 ls --profile localstack
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:88: {{< command >}}
$ pip install awscli-local[ver1]
{{< / command >}} -> ```bash
pip install awscli-local[ver1]
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:96: {{< command >}}
$ pip install awscli-local
{{< / command >}} -> ```bash
pip install awscli-local
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:110: {{< command >}}
awslocal kinesis list-streams
{{< / command >}} -> ```bash
awslocal kinesis list-streams
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:132: {{< command >}}
$ virtualenv .venv
$ . .venv/bin/activate
$ pip install https://github.com/boto/botocore/archive/v2.zip https://github.com/aws/aws-cli/archive/v2.zip
{{< / command >}} -> ```bash
virtualenv .venv
. .venv/bin/activate
pip install https://github.com/boto/botocore/archive/v2.zip https://github.com/aws/aws-cli/archive/v2.zip
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:157: {{< command >}}
$ docker network create localstack
0c9cb3d37b0ea1bfeb6b77ade0ce5525e33c7929d69f49c3e5ed0af457bdf123
{{< / command >}} -> ```bash
docker network create localstack
0c9cb3d37b0ea1bfeb6b77ade0ce5525e33c7929d69f49c3e5ed0af457bdf123
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:173: {{< command >}}
$ docker run --network localstack --rm -it amazon/aws-cli --endpoint-url=http://localstack:4566 lambda list-functions
{
    "Functions": []
}
{{< / command >}} -> ```bash
docker run --network localstack --rm -it amazon/aws-cli --endpoint-url=http://localstack:4566 lambda list-functions
{
    "Functions": []
}
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:182: {{< command >}}
$ alias laws='docker run --network localstack --rm -it amazon/aws-cli --endpoint-url=http://localstack:4566'
{{< / command >}} -> ```bash
alias laws='docker run --network localstack --rm -it amazon/aws-cli --endpoint-url=http://localstack:4566'
```
src/content/docs/aws/integrations/aws-native-tools/aws-cli.md:188: {{< command >}}
$ laws lambda list-functions
{
    "Functions": []
}
{{< / command >}} -> ```bash
laws lambda list-functions
{
    "Functions": []
}
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:20: {{< command >}}
$ localstack start -d
{{< / command >}} -> ```bash
localstack start -d
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:26: {{< command >}}
$ pip install chalice-local
{{< / command >}} -> ```bash
pip install chalice-local
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:32: {{< command >}}
$ chalice-local new-project
{{< / command >}} -> ```bash
chalice-local new-project
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:88: {{< command >}}
$ chalice-local local
Serving on http://127.0.0.1:8000
{{< / command >}} -> ```bash
chalice-local local
Serving on http://127.0.0.1:8000
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:95: {{< command >}}
$ curl -X GET http://127.0.0.1:8000
{"hello":"world"}
{{< / command >}} -> ```bash
curl -X GET http://127.0.0.1:8000
{"hello":"world"}
```
src/content/docs/aws/integrations/aws-native-tools/aws-chalice.md:104: {{< command >}}
$ chalice-local deploy

Creating deployment package.
Creating IAM role: localstack-test-dev
Creating lambda function: localstack-test-dev
Creating Rest API
Resources deployed:
- Lambda ARN: arn:aws:lambda:us-east-1:000000000000:function:localstack-test-dev
- Rest API URL: https://y5iuni004m.execute-api.us-east-1.amazonaws.com/api/
{{< / command >}} -> ```bash
chalice-local deploy

Creating deployment package.
Creating IAM role: localstack-test-dev
Creating lambda function: localstack-test-dev
Creating Rest API
Resources deployed:
- Lambda ARN: arn:aws:lambda:us-east-1:000000000000:function:localstack-test-dev
- Rest API URL: https://y5iuni004m.execute-api.us-east-1.amazonaws.com/api/
```
src/content/docs/aws/integrations/infrastructure-as-code/cloud-custodian.md:28: {{< command >}}
$ pip install c7n
{{< / command >}} -> ```bash
pip install c7n
```
src/content/docs/aws/integrations/infrastructure-as-code/cloud-custodian.md:40: {{< command >}}
$ awslocal ec2 run-instances \
    --image-id ami-ff0fea8310f3 \
    --count 1 \
    --instance-type t3.nano \
    --tag-specifications "ResourceType=instance,Tags=[{Key=Custodian,Value=AnyValue}]"
{{< / command >}} -> ```bash
awslocal ec2 run-instances \
    --image-id ami-ff0fea8310f3 \
    --count 1 \
    --instance-type t3.nano \
    --tag-specifications "ResourceType=instance,Tags=[{Key=Custodian,Value=AnyValue}]"
```
src/content/docs/aws/integrations/infrastructure-as-code/cloud-custodian.md:86: {{< command >}}
$ custodian run \
    --output-dir=.
custodian.yml \
    --profile localstack
{{< / command >}} -> ```bash
custodian run \
    --output-dir=.
custodian.yml \
    --profile localstack
```
src/content/docs/aws/integrations/infrastructure-as-code/cloud-custodian.md:120: {{< command >}}
$ custodian run -s . \
    --metrics aws custodian.yml \
    --profile localstack
{{< / command >}} -> ```bash
custodian run -s . \
    --metrics aws custodian.yml \
    --profile localstack
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:45: {{< command >}}
$ pip install terraform-local
{{< / command >}} -> ```bash
pip install terraform-local
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:51: {{< command >}}
$ tflocal --help
<disable-copy>
Usage: terraform [global options] <subcommand> [args]
...
<disable-copy>
{{< / command >}} -> ```bash
tflocal --help
<disable-copy>
Usage: terraform [global options] <subcommand> [args]
...
<disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:64: {{< command >}}
$ tflocal init
{{< / command >}} -> ```bash
tflocal init
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:70: {{< command >}}
$ tflocal apply
{{< / command >}} -> ```bash
tflocal apply
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:472: {{< command >}}
$ cdktf synth && cdktf deploy
{{< /command >}} -> ```bash
cdktf synth && cdktf deploy
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:492: {{< command >}}
$ awslocal s3 ls
{{< /command >}} -> ```bash
awslocal s3 ls
```
src/content/docs/aws/integrations/infrastructure-as-code/terraform.md:502: {{< command >}}
$ TF_CMD=tofu tflocal --help
<disable-copy>
Usage: tofu [global options] <subcommand> [args]

The available commands for execution are listed below.
The primary workflow commands are given first, followed by
less common or more advanced commands.
...
</disable-copy>
{{< /command >}} -> ```bash
TF_CMD=tofu tflocal --help
<disable-copy>
Usage: tofu [global options] <subcommand> [args]

The available commands for execution are listed below.
The primary workflow commands are given first, followed by
less common or more advanced commands.
...
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:39: {{< command >}}
$ export PULUMI_CONFIG_PASSPHRASE=lsdevtest
$ export PULUMI_BACKEND_URL=file://`pwd`/myproj
{{< / command >}} -> ```bash
export PULUMI_CONFIG_PASSPHRASE=lsdevtest
export PULUMI_BACKEND_URL=file://`pwd`/myproj
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:52: {{< command >}}
$ pip install pulumi-local
{{< / command >}} -> ```bash
pip install pulumi-local
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:58: {{< command >}}
$ pulumilocal --help
<disable-copy>
Pulumi - Modern Infrastructure as Code
...
<disable-copy>
{{< / command >}} -> ```bash
pulumilocal --help
<disable-copy>
Pulumi - Modern Infrastructure as Code
...
<disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:70: {{< command >}}
$ mkdir myproj
$ pulumilocal new aws-typescript -y -s lsdev --cwd myproj
{{< / command >}} -> ```bash
mkdir myproj
pulumilocal new aws-typescript -y -s lsdev --cwd myproj
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:83: {{< command >}}
$ pulumilocal stack select -c lsdev --cwd myproj
{{< / command >}} -> ```bash
pulumilocal stack select -c lsdev --cwd myproj
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:90: {{< command >}}
$ pulumilocal up --cwd myproj
{{< / command >}} -> ```bash
pulumilocal up --cwd myproj
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:112: {{< command >}}
$ mkdir quickstart && cd quickstart
$ pulumi new aws-typescript
{{< / command >}} -> ```bash
mkdir quickstart && cd quickstart
pulumi new aws-typescript
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:142: {{< command >}}
$ tree -L 1
.
├── index.ts
├── node_modules
├── package.json
├── package-lock.json
├── Pulumi.dev.yaml
├── Pulumi.yaml
└── tsconfig.json
{{< / command >}} -> ```bash
tree -L 1
.
├── index.ts
├── node_modules
├── package.json
├── package-lock.json
├── Pulumi.dev.yaml
├── Pulumi.yaml
└── tsconfig.json
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:446: {{< command >}}
$ pulumi up
{{< / command >}} -> ```bash
pulumi up
```
src/content/docs/aws/integrations/infrastructure-as-code/pulumi.md:452: {{< command >}}
$ awslocal s3 ls
{{< / command >}} -> ```bash
awslocal s3 ls
```
src/content/docs/aws/integrations/infrastructure-as-code/former2.md:55: {{< command >}}
$ awslocal s3 mb s3://my-bucket
$ awslocal sqs create-queue --queue-name my-queue
$ awslocal dynamodb create-table \
    --table-name my-table \
    --attribute-definitions AttributeName=id,AttributeType=S \
    --key-schema AttributeName=id,KeyType=HASH \
    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
{{< / command >}} -> ```bash
awslocal s3 mb s3://my-bucket
awslocal sqs create-queue --queue-name my-queue
awslocal dynamodb create-table \
    --table-name my-table \
    --attribute-definitions AttributeName=id,AttributeType=S \
    --key-schema AttributeName=id,KeyType=HASH \
    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
```
src/content/docs/aws/integrations/infrastructure-as-code/former2.md:67: {{< command >}}
$ localstack logs
<disable-copy>
2023-10-14T15:31:08.852  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS s3.CreateBucket => 200
2023-10-14T15:31:09.356  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS sqs.CreateQueue => 200
2023-10-14T15:31:12.920  INFO --- [   asgi_gw_0] botocore.credentials       : Found credentials in environment variables.
2023-10-14T15:31:13.332  INFO --- [   asgi_gw_0] localstack.utils.bootstrap : Execution of "require" took 2028.25ms
2023-10-14T15:31:13.712  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS dynamodb.CreateTable => 200
</disable-copy>
$ awslocal s3 ls
<disable-copy>
2023-10-14 21:01:08 my-bucket
</disable-copy>
$ awslocal sqs list-queues
<disable-copy>
{
    "QueueUrls": [
        "http://localhost:4566/000000000000/my-queue"
    ]
}
</disable-copy>
$ awslocal dynamodb list-tables
<disable-copy>
{
    "TableNames": [
        "my-table"
    ]
}
</disable-copy>
{{< / command >}} -> ```bash
localstack logs
<disable-copy>
2023-10-14T15:31:08.852  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS s3.CreateBucket => 200
2023-10-14T15:31:09.356  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS sqs.CreateQueue => 200
2023-10-14T15:31:12.920  INFO --- [   asgi_gw_0] botocore.credentials       : Found credentials in environment variables.
2023-10-14T15:31:13.332  INFO --- [   asgi_gw_0] localstack.utils.bootstrap : Execution of "require" took 2028.25ms
2023-10-14T15:31:13.712  INFO --- [   asgi_gw_0] localstack.request.aws     : AWS dynamodb.CreateTable => 200
</disable-copy>
awslocal s3 ls
<disable-copy>
2023-10-14 21:01:08 my-bucket
</disable-copy>
awslocal sqs list-queues
<disable-copy>
{
    "QueueUrls": [
        "http://localhost:4566/000000000000/my-queue"
    ]
}
</disable-copy>
awslocal dynamodb list-tables
<disable-copy>
{
    "TableNames": [
        "my-table"
    ]
}
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:32: {{<command>}}
$ helm repo add crossplane-stable https://charts.crossplane.io/stable
$ helm repo update
$ helm install crossplane crossplane-stable/crossplane --namespace crossplane-system --create-namespace
{{</command>}} -> ```bash
helm repo add crossplane-stable https://charts.crossplane.io/stable
helm repo update
helm install crossplane crossplane-stable/crossplane --namespace crossplane-system --create-namespace
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:40: {{<command>}}
$ curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | bash
<disable-copy>...</disable-copy>
$ sudo mv crossplane /usr/local/bin
{{</command>}} -> ```bash
curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | bash
<disable-copy>...</disable-copy>
sudo mv crossplane /usr/local/bin
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:46: {{<command>}}
$ crossplane version
<disable-copy>Client Version: v1.17.0
Server Version: v1.17.0</disable-copy>

$ kubectl get crds | grep crossplane
<disable-copy>compositions.apiextensions.crossplane.io                     2023-09-03T11:30:36Z
configurations.pkg.crossplane.io                             2023-09-03T11:30:36Z
...</disable-copy>
{{</command>}} -> ```bash
crossplane version
<disable-copy>Client Version: v1.17.0
Server Version: v1.17.0</disable-copy>

kubectl get crds | grep crossplane
<disable-copy>compositions.apiextensions.crossplane.io                     2023-09-03T11:30:36Z
configurations.pkg.crossplane.io                             2023-09-03T11:30:36Z
...</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:65: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-aws-s3
spec:
  package: xpkg.upbound.io/upbound/provider-aws-s3:v0.40.0
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-aws-s3
spec:
  package: xpkg.upbound.io/upbound/provider-aws-s3:v0.40.0
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:77: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-aws-sqs
spec:
  package: xpkg.upbound.io/upbound/provider-aws-sqs:v0.40.0
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-aws-sqs
spec:
  package: xpkg.upbound.io/upbound/provider-aws-sqs:v0.40.0
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:89: {{<command>}}
$ kubectl get providers<disable-copy>
NAME                          INSTALLED   HEALTHY   PACKAGE                                               AGE
upbound-provider-family-aws   True        True      xpkg.upbound.io/upbound/provider-family-aws:v0.40.0   2m
provider-aws-s3               True        True      xpkg.upbound.io/upbound/provider-aws-s3:v0.40.0       2m
provider-aws-sqs              True        True      xpkg.upbound.io/upbound/provider-aws-sqs:v0.40.0      2m
</disable-copy>
{{</command>}} -> ```bash
kubectl get providers<disable-copy>
NAME                          INSTALLED   HEALTHY   PACKAGE                                               AGE
upbound-provider-family-aws   True        True      xpkg.upbound.io/upbound/provider-family-aws:v0.40.0   2m
provider-aws-s3               True        True      xpkg.upbound.io/upbound/provider-aws-s3:v0.40.0       2m
provider-aws-sqs              True        True      xpkg.upbound.io/upbound/provider-aws-sqs:v0.40.0      2m
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:99: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: localstack-aws-secret
stringData:
  creds: |
    [default]
    aws_access_key_id = test
    aws_secret_access_key = test
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: localstack-aws-secret
stringData:
  creds: |
    [default]
    aws_access_key_id = test
    aws_secret_access_key = test
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:114: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: aws.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: default
spec:
  credentials:
    source: Secret
    secretRef:
      name: localstack-aws-secret
      namespace: default
      key: creds
  endpoint:
    hostnameImmutable: true
    # TODO: add more services to this list, as needed
    services: [iam, s3, sqs, sts]
    url:
      type: Static
      static: http://host.docker.internal:4566
  skip_credentials_validation: true
  skip_metadata_api_check: true
  skip_requesting_account_id: true
  s3_use_path_style: true
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: aws.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: default
spec:
  credentials:
    source: Secret
    secretRef:
      name: localstack-aws-secret
      namespace: default
      key: creds
  endpoint:
    hostnameImmutable: true
TODO: add more services to this list, as needed
    services: [iam, s3, sqs, sts]
    url:
      type: Static
      static: http://host.docker.internal:4566
  skip_credentials_validation: true
  skip_metadata_api_check: true
  skip_requesting_account_id: true
  s3_use_path_style: true
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:155: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  name: crossplane-test-bucket
spec:
  forProvider:
    region: us-east-1
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  name: crossplane-test-bucket
spec:
  forProvider:
    region: us-east-1
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:169: {{<command>}}
$ kubectl get buckets<disable-copy>
NAME                     READY   SYNCED   EXTERNAL-NAME            AGE
crossplane-test-bucket   True    True     crossplane-test-bucket   30s
</disable-copy>
{{</command>}} -> ```bash
kubectl get buckets<disable-copy>
NAME                     READY   SYNCED   EXTERNAL-NAME            AGE
crossplane-test-bucket   True    True     crossplane-test-bucket   30s
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:178: {{<command>}}
$ awslocal s3 ls<disable-copy>
2023-09-03 15:18:47 crossplane-test-bucket
</disable-copy>
{{</command>}} -> ```bash
awslocal s3 ls<disable-copy>
2023-09-03 15:18:47 crossplane-test-bucket
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:185: {{<command>}}
$ cat <<EOF | kubectl apply -f -
apiVersion: sqs.aws.upbound.io/v1beta1
kind: Queue
metadata:
  name: crossplane-test-queue
spec:
  forProvider:
    name: crossplane-test-queue
    region: us-east-1
EOF
{{</command>}} -> ```bash
cat <<EOF | kubectl apply -f -
apiVersion: sqs.aws.upbound.io/v1beta1
kind: Queue
metadata:
  name: crossplane-test-queue
spec:
  forProvider:
    name: crossplane-test-queue
    region: us-east-1
EOF
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:199: {{<command>}}
$ kubectl get queues<disable-copy>
NAME                    READY   SYNCED   EXTERNAL-NAME                                                         AGE
crossplane-test-queue   True    True     http://host.docker.internal:4566/000000000000/crossplane-test-queue   40s
</disable-copy>
{{</command>}} -> ```bash
kubectl get queues<disable-copy>
NAME                    READY   SYNCED   EXTERNAL-NAME                                                         AGE
crossplane-test-queue   True    True     http://host.docker.internal:4566/000000000000/crossplane-test-queue   40s
</disable-copy>
```
src/content/docs/aws/integrations/infrastructure-as-code/crossplane.md:208: {{<command>}}
$ awslocal sqs list-queues<disable-copy>
{
    "QueueUrls": [
        "http://localhost:4566/000000000000/crossplane-test-queue"
    ]
}
</disable-copy>
{{</command>}} -> ```bash
awslocal sqs list-queues<disable-copy>
{
    "QueueUrls": [
        "http://localhost:4566/000000000000/crossplane-test-queue"
    ]
}
</disable-copy>
```
src/content/docs/aws/integrations/containers/openshift.md:82: {{< command >}}
$ export AWS_ENDPOINT_URL='<localstack-route-url>'
$ awslocal s3 mb s3://my-bucket
$ awslocal sqs create-queue --queue-name my-queue
{{< /command >}} -> ```bash
export AWS_ENDPOINT_URL='<localstack-route-url>'
awslocal s3 mb s3://my-bucket
awslocal sqs create-queue --queue-name my-queue
```
src/content/docs/aws/integrations/containers/kubernetes.md:44: {{< command >}}
$ helm repo add localstack https://localstack.github.io/helm-charts
{{< /command >}} -> ```bash
helm repo add localstack https://localstack.github.io/helm-charts
```
src/content/docs/aws/integrations/containers/kubernetes.md:92: {{< command >}}
$ helm repo add localstack-charts https://localstack.github.io/helm-charts
$ helm install my-release localstack-charts/localstack -f pro-values.yaml
{{< /command >}} -> ```bash
helm repo add localstack-charts https://localstack.github.io/helm-charts
helm install my-release localstack-charts/localstack -f pro-values.yaml
```
src/content/docs/aws/integrations/containers/eksctl.md:42: {{< command >}}

$ eksctl create cluster --nodes 1 --profile localstack

{{< / command >}} -> ```bash
eksctl create cluster --nodes 1 --profile localstack
```
src/content/docs/aws/integrations/containers/eksctl.md:50: {{< command >}}

export AWS_CLOUDFORMATION_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_EC2_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_EKS_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_ELB_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_ELBV2_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_IAM_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_STS_ENDPOINT=http://localhost.localstack.cloud:4566

eksctl create cluster --nodes 1

{{< / command >}} -> ```bash
export AWS_CLOUDFORMATION_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_EC2_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_EKS_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_ELB_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_ELBV2_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_IAM_ENDPOINT=http://localhost.localstack.cloud:4566
export AWS_STS_ENDPOINT=http://localhost.localstack.cloud:4566

eksctl create cluster --nodes 1
```
src/content/docs/aws/integrations/containers/eksctl.md:70: {{< command >}}
$ kubectl get nodes
{{< / command >}} -> ```bash
kubectl get nodes
```
src/content/docs/aws/integrations/containers/rancher-desktop.md:80: {{< command >}}
# 1. Make sure there is no existing socket at /var/run/docker.sock
sudo rm -f /var/run/docker.sock

# 2. Adjust the path if your Rancher Desktop socket is in a different location
$ sudo ln -s /var/run/rancher-desktop-lima/docker.sock /var/run/docker.sock
{{< /command >}} -> ```bash
1. Make sure there is no existing socket at /var/run/docker.sock
sudo rm -f /var/run/docker.sock

2. Adjust the path if your Rancher Desktop socket is in a different location
sudo ln -s /var/run/rancher-desktop-lima/docker.sock /var/run/docker.sock
```
src/content/docs/aws/integrations/containers/rancher-desktop.md:90: {{< command >}}
$ DEBUG=1 localstack start --network rancher
{{< /command >}} -> ```bash
DEBUG=1 localstack start --network rancher
```
src/content/docs/aws/integrations/containers/rancher-desktop.md:101: {{< command >}}
$ DEBUG=1 DOCKER_CMD=nerdctl localstack start --network rancher
{{< /command >}} -> ```bash
DEBUG=1 DOCKER_CMD=nerdctl localstack start --network rancher
```
src/content/docs/aws/integrations/containers/rancher-desktop.md:111: {{< command >}}
$ rancher-desktop settings set --docker
{{< /command >}} -> ```bash
rancher-desktop settings set --docker
```
src/content/docs/aws/integrations/containers/rancher-desktop.md:117: {{< command >}}
$ rancher-desktop --start
{{< /command >}} -> ```bash
rancher-desktop --start
```
src/content/docs/aws/integrations/containers/devcontainers.md:54: {{< command >}}
$ devcontainer templates apply \
    --template-id ghcr.io/localstack/devcontainer-template/localstack-dind \
    --template-args "$(cat ./options.json)" \
    --features '[{"id":"ghcr.io/devcontainers/features/aws-cli:1"}]'
{{< /command >}} -> ```bash
devcontainer templates apply \
    --template-id ghcr.io/localstack/devcontainer-template/localstack-dind \
    --template-args "$(cat ./options.json)" \
    --features '[{"id":"ghcr.io/devcontainers/features/aws-cli:1"}]'
```
src/content/docs/aws/integrations/containers/devcontainers.md:63: {{< command >}}
$ devcontainer up --id-label project=localstack --workspace-folder .
{{< /command >}} -> ```bash
devcontainer up --id-label project=localstack --workspace-folder .
```
src/content/docs/aws/integrations/containers/devcontainers.md:69: {{< command >}}
$ devcontainer exec --id-label project=localstack /bin/bash
{{< /command >}} -> ```bash
devcontainer exec --id-label project=localstack /bin/bash
```
src/content/docs/aws/integrations/containers/devcontainers.md:75: {{< command >}}
vscode ➜ ~ $ localstack --version
3.6.0
vscode ➜ ~ $
{{< /command >}} -> ```bash
vscode ➜ ~ $ localstack --version
3.6.0
vscode ➜ ~ $
```
src/content/docs/aws/integrations/containers/devcontainers.md:83: {{< command >}}
$ for container in $(docker ps -q); do \
    [[ "$(docker inspect --format '{{ index .Config.Labels "project"}}' $container)" = "localstack" ]] && \
    docker rm -f $container; \
done
{{< /command >}} -> ```bash
for container in $(docker ps -q); do \
    [[ "$(docker inspect --format '{{ index .Config.Labels "project"}}' $container)" = "localstack" ]] && \
    docker rm -f $container; \
done
```
src/content/docs/aws/integrations/containers/devcontainers.md:249: {{< command >}}
$ devcontainer templates apply \
    --template-id ghcr.io/localstack/devcontainer-template/localstack-dood \
    --template-args "$(cat ./options.json)" \
    --features '[{"id":"ghcr.io/devcontainers/features/aws-cli:1"}]'
{{< /command >}} -> ```bash
devcontainer templates apply \
    --template-id ghcr.io/localstack/devcontainer-template/localstack-dood \
    --template-args "$(cat ./options.json)" \
    --features '[{"id":"ghcr.io/devcontainers/features/aws-cli:1"}]'
```
src/content/docs/aws/integrations/containers/devcontainers.md:258: {{< command >}}
$ devcontainer up --id-label project=localstack --workspace-folder .
{{< /command >}} -> ```bash
devcontainer up --id-label project=localstack --workspace-folder .
```
src/content/docs/aws/integrations/containers/devcontainers.md:264: {{< command >}}
$ devcontainer exec --id-label project=localstack /bin/bash
{{< /command >}} -> ```bash
devcontainer exec --id-label project=localstack /bin/bash
```
src/content/docs/aws/integrations/containers/devcontainers.md:270: {{< command >}}
vscode ➜ ~ $ localstack --version
3.6.0
vscode ➜ ~ $
{{< /command >}} -> ```bash
vscode ➜ ~ $ localstack --version
3.6.0
vscode ➜ ~ $
```
src/content/docs/aws/integrations/containers/devcontainers.md:278: {{< command >}}
$ docker compose \
  --project-name "$(basename $PWD)_devcontainer" \
  -f ./.devcontainer/docker-compose.yml down
{{< /command >}} -> ```bash
docker compose \
  --project-name "$(basename $PWD)_devcontainer" \
  -f ./.devcontainer/docker-compose.yml down
```
